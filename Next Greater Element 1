class Solution {
    public int[] nextLargerElement(int[] arr) {
        int n=arr.length;
        int[] nge=new int[n];
       Arrays.fill(nge,-1);
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(arr[j]>arr[i]){
                    nge[i]=arr[j];
                    break;
                }
            }
        }
        return nge;
    }
}
tc=o(n square)
sc=o(n) for returning answer


class Solution {
    public int[] nextLargerElement(int[] arr) {
        int n=arr.length;
         int[] nge=new int[n];
         Stack<Integer>st=new Stack<>();
         for(int i=n-1;i>=0;i--){
            while(!st.isEmpty() && st.peek()<=arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                nge[i]=-1;
            }else{
                nge[i]=st.peek();
            }
            st.push(arr[i]);
         }
         return nge;
    }
}
tc=o(2n)
sc=o(n)+o(n)
