import java.util.Arrays;



public class Solution {
    public static int[] nextGreaterElementII(int []a) {
        // Write your code here.
        int n=a.length;
        int[] nge=new int[n];
        Arrays.fill(nge, -1);
        for(int i=0;i<n;i++){
            for(int j=1;j<n;j++){
                int index=(i+j)%n;
                if(a[index]>a[i]){
                    nge[i]=a[index];
                    break;
                }
            }
        }
        return nge;
    }
}
tc=o(n^2)
sc=o(n)


import java.util.Arrays;
import java.util.Stack;



public class Solution {
    public static int[] nextGreaterElementII(int []a) {
        // Write your code here.
        int n=a.length;
        Stack<Integer>st=new Stack<>();
        int[] nge=new int[n];
        Arrays.fill(nge, -1);
        for(int i=2*n-1;i>=0;i--){
            while(!st.isEmpty() && st.peek()<= a[i%n]){
                st.pop();
            }
            if(i<n){
                nge[i]=st.isEmpty()?-1:st.peek();
            }
            st.push(a[i%n]);
        }
        return nge;
    }
}

tc=o(n)
sc=o(n)





